name: Build SQLCipher (Windows MinGW-w64)

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'SQLCipher tag (ex: v4.10.0)'
        required: true
        default: 'v4.10.0'

jobs:
  build-win:
    runs-on: windows-latest
    steps:
      - name: üß© Baixar c√≥digo-fonte SQLCipher
        run: |
          git clone https://github.com/sqlcipher/sqlcipher.git
          cd sqlcipher
          git checkout ${{ github.event.inputs.tag }}

      - name: ‚öôÔ∏è Instalar MSYS2 e depend√™ncias
        shell: pwsh
        run: |
          echo "üîπ Instalando MSYS2..."
          choco install msys2 --no-progress -y
          echo "üîπ Instalando pacotes necess√°rios..."
          C:\msys64\usr\bin\bash -lc "pacman -S --noconfirm --needed mingw-w64-x86_64-gcc mingw-w64-x86_64-openssl make autoconf automake libtool pkgconf tcl"

      - name: üèóÔ∏è Gerar arquivos sqlite3.c e shell.c manualmente
        shell: pwsh
        run: |
          echo "üîπ Gerando arquivos sqlite3.c e shell.c manualmente..."
          cd sqlcipher
          C:\msys64\usr\bin\bash -lc "cd /d/a/_work/${{ github.event.repository.name }}/${{ github.event.repository.name }}/sqlcipher && \
            mkdir -p build && cd build && \
            cp -r ../* . && \
            echo 'üîπ Executando tclsh para gerar sqlite3.c...' && \
            tclsh ../tool/mksqlite3c.tcl > sqlite3.c && \
            echo 'üîπ Gerando shell.c...' && \
            cp ../src/shell.c shell.c"

      - name: üîç Listar arquivos gerados (.c)
        shell: pwsh
        run: |
          echo "üîç Verificando onde est√£o sqlite3.c e shell.c..."
          Get-ChildItem -Recurse -Filter sqlite3.c | ForEach-Object { $_.FullName }
          Get-ChildItem -Recurse -Filter shell.c | ForEach-Object { $_.FullName }

      - name: üß± Compilar SQLCipher (DLL + CLI)
        shell: pwsh
        run: |
          echo "üîπ Ajustando PATH..."
          $env:PATH = "C:\msys64\mingw64\bin;$env:PATH"

          cd sqlcipher/build
          $sqlite3Path = (Get-ChildItem -Recurse -Filter sqlite3.c | Select-Object -First 1).FullName
          $shellPath   = (Get-ChildItem -Recurse -Filter shell.c   | Select-Object -First 1).FullName

          if (-not $sqlite3Path) { throw "‚ùå sqlite3.c n√£o encontrado!" }
          if (-not $shellPath) { throw "‚ùå shell.c n√£o encontrado!" }

          echo "üîπ Compilando biblioteca principal (DLL)..."
          gcc -O2 -DSQLITE_HAS_CODEC -DSQLCIPHER_CRYPTO_OPENSSL -DSQLITE_TEMP_STORE=2 -DHAVE_STDINT_H -I. "$sqlite3Path" -shared -o sqlcipher.dll -L/mingw64/lib -lcrypto -lssl

          echo "üîπ Compilando execut√°vel CLI..."
          gcc -O2 -DSQLITE_HAS_CODEC -DSQLCIPHER_CRYPTO_OPENSSL -DSQLITE_TEMP_STORE=2 -DHAVE_STDINT_H -I. "$shellPath" -o sqlcipher.exe -L/mingw64/lib -lcrypto -lssl

      - name: üì¶ Compactar arquivos compilados
        shell: pwsh
        run: |
          echo "üîπ Compactando arquivos compilados..."
          if (!(Test-Path "sqlcipher/build/sqlcipher.dll")) { throw "‚ùå sqlcipher.dll n√£o encontrado!" }
          if (!(Test-Path "sqlcipher/build/sqlcipher.exe")) { throw "‚ùå sqlcipher.exe n√£o encontrado!" }

          Compress-Archive -Path sqlcipher/build/sqlcipher.dll,sqlcipher/build/sqlcipher.exe,sqlcipher/sqlite3.h,sqlcipher/sqlite3ext.h -DestinationPath sqlcipher-windows.zip
          echo "‚úÖ Arquivo compactado com sucesso."

      - name: üì§ Upload do build gerado
        uses: actions/upload-artifact@v4
        with:
          name: sqlcipher-windows
          path: sqlcipher-windows.zip
