name: Build SQLCipher (Windows MinGW-w64)

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'SQLCipher tag (ex: v4.10.0)'
        required: true
        default: 'v4.10.0'

jobs:
  build-win:
    runs-on: windows-latest

    steps:
      - name: 🔹 Checkout do repositório
        uses: actions/checkout@v4

      - name: 🔹 Instalar dependências MSYS2 e OpenSSL
        run: |
          C:\msys64\usr\bin\bash -lc "pacman -Syu --noconfirm"
          C:\msys64\usr\bin\bash -lc "pacman -S --noconfirm mingw-w64-x86_64-gcc mingw-w64-x86_64-openssl make"

      - name: 🔹 Gerar arquivos sqlite3.c e shell.c
        run: |
          echo "🔹 Gerando arquivos sqlite3.c e shell.c manualmente..."
          C:\msys64\usr\bin\bash -lc "./configure --enable-tempstore=yes CFLAGS='-DSQLITE_HAS_CODEC' && make sqlite3.c shell.c"

      - name: 🔹 Preparar pasta build
        shell: pwsh
        run: |
          if (-not (Test-Path "build")) {
            mkdir build
          }
          Copy-Item sqlite3.c shell.c build -Force

      - name: 🔹 Compilar SQLCipher (DLL + EXE)
        shell: pwsh
        run: |
          echo "🔹 Ajustando PATH..."
          $env:PATH = "C:\msys64\mingw64\bin;$env:PATH"
          
          cd build
          echo "📂 Local atual: $(Get-Location)"
          echo "📄 Conteúdo da pasta build:"
          Get-ChildItem
          
          $sqlite3Path = (Get-ChildItem -Filter sqlite3.c | Select-Object -First 1).FullName
          $shellPath   = (Get-ChildItem -Filter shell.c   | Select-Object -First 1).FullName
          
          if (-not $sqlite3Path) { throw "❌ sqlite3.c não encontrado!" }
          if (-not $shellPath) { throw "❌ shell.c não encontrado!" }
          
          echo "🔹 Compilando biblioteca principal (DLL)..."
          gcc -O2 -DSQLITE_HAS_CODEC -DSQLCIPHER_CRYPTO_OPENSSL -DSQLITE_TEMP_STORE=2 -DHAVE_STDINT_H -I. "$sqlite3Path" -shared -o sqlcipher.dll -L/mingw64/lib -lcrypto -lssl
          
          echo "🔹 Compilando executável CLI..."
          gcc -O2 -DSQLITE_HAS_CODEC -DSQLCIPHER_CRYPTO_OPENSSL -DSQLITE_TEMP_STORE=2 -DHAVE_STDINT_H -I. "$shellPath" -o sqlcipher.exe -L/mingw64/lib -lcrypto -lssl

      - name: 🔹 Compactar artefatos
        shell: pwsh
        run: |
          Compress-Archive -Path build\sqlcipher.dll, build\sqlcipher.exe -DestinationPath build\sqlcipher-windows.zip -Force

      - name: 🔹 Publicar artefatos (ZIP)
        uses: actions/upload-artifact@v4
        with:
          name: sqlcipher-windows
          path: build/sqlcipher-windows.zip
