name: Build SQLCipher (Windows MinGW-w64)

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "SQLCipher tag (ex: v4.10.0)"
        required: true
        default: "v4.10.0"

jobs:
  build-win:
    runs-on: windows-latest

    steps:
      - name: üß© Baixar c√≥digo-fonte SQLCipher
        run: |
          git clone https://github.com/sqlcipher/sqlcipher.git
          cd sqlcipher
          git checkout ${{ github.event.inputs.tag }}

      - name: ‚öôÔ∏è Instalar MSYS2 e depend√™ncias
        shell: pwsh
        run: |
          echo "üîπ Instalando MSYS2..."
          choco install msys2 --no-progress -y
          echo "üîπ Instalando pacotes necess√°rios..."
          C:\msys64\usr\bin\bash -lc 'pacman -S --noconfirm --needed mingw-w64-x86_64-gcc mingw-w64-x86_64-openssl make autoconf automake libtool pkgconf tcl rsync'

      - name: üèóÔ∏è Gerar arquivos sqlite3.c e shell.c
        shell: pwsh
        run: |
          echo "üîπ Gerando arquivos sqlite3.c e shell.c..."
          $repoDir = Join-Path (Get-Location).Path "sqlcipher"
          Write-Host "üìÇ Diret√≥rio atual: $repoDir"
          $bashDir = $repoDir.Replace('\', '/')
          
          # üîπ Tudo ser√° gerado dentro de D:/a/sqlcipher/sqlcipher/build
          C:\msys64\usr\bin\bash -lc "cd \"$bashDir\" && \
            mkdir -p build && \
            echo 'üîπ Copiando arquivos para build...' && \
            rsync -a --exclude 'build' ./ ./build/ && \
            cd build && \
            echo 'üîπ Executando tclsh...' && \
            tclsh ../tool/mksqlite3c.tcl > sqlite3.c && \
            cp ../src/shell.c shell.c && \
            echo '‚úÖ sqlite3.c e shell.c gerados com sucesso!'"

      - name: üîç Verificar estrutura de diret√≥rios
        shell: pwsh
        run: |
          echo "üîç Estrutura de diret√≥rios SQLCipher:"
          tree sqlcipher /F | Out-String -Width 200

      - name: üß± Compilar SQLCipher (DLL + CLI)
        shell: pwsh
        run: |
          echo "üîπ Ajustando PATH..."
          $env:PATH = "C:\msys64\mingw64\bin;$env:PATH"

          # ‚úÖ Agora o caminho √© fixo e correto
          cd sqlcipher
          if (-not (Test-Path "build")) {
            throw "‚ùå Pasta 'build' n√£o encontrada em: $(Get-Location)"
          }

          cd build
          echo "üìÇ Local atual: $(Get-Location)"
          echo "üìÑ Conte√∫do da pasta build:"
          Get-ChildItem

          $sqlite3Path = (Get-ChildItem -Filter sqlite3.c | Select-Object -First 1).FullName
          $shellPath   = (Get-ChildItem -Filter shell.c   | Select-Object -First 1).FullName

          if (-not $sqlite3Path) { throw "‚ùå sqlite3.c n√£o encontrado!" }
          if (-not $shellPath) { throw "‚ùå shell.c n√£o encontrado!" }

          echo "üîπ Compilando biblioteca principal (DLL)..."
          gcc -O2 -DSQLITE_HAS_CODEC -DSQLCIPHER_CRYPTO_OPENSSL -DSQLITE_TEMP_STORE=2 -DHAVE_STDINT_H -I. "$sqlite3Path" -shared -o sqlcipher.dll -L/mingw64/lib -lcrypto -lssl

          echo "üîπ Compilando execut√°vel CLI..."
          gcc -O2 -DSQLITE_HAS_CODEC -DSQLCIPHER_CRYPTO_OPENSSL -DSQLITE_TEMP_STORE=2 -DHAVE_STDINT_H -I. "$shellPath" -o sqlcipher.exe -L/mingw64/lib -lcrypto -lssl

      - name: üì¶ Compactar arquivos compilados
        shell: pwsh
        run: |
          echo "üîπ Compactando arquivos compilados..."
          if (!(Test-Path "sqlcipher/build/sqlcipher.dll")) { throw "‚ùå sqlcipher.dll n√£o encontrado!" }
          if (!(Test-Path "sqlcipher/build/sqlcipher.exe")) { throw "‚ùå sqlcipher.exe n√£o encontrado!" }

          Compress-Archive -Path sqlcipher/build/sqlcipher.dll,sqlcipher/build/sqlcipher.exe,sqlcipher/sqlite3.h,sqlcipher/sqlite3ext.h -DestinationPath sqlcipher-windows.zip
          echo "‚úÖ Arquivo compactado com sucesso."

      - name: üì§ Upload do build gerado
        uses: actions/upload-artifact@v4
        with:
          name: sqlcipher-windows
          path: sqlcipher-windows.zip
