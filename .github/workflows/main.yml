name: Build SQLCipher (Windows - MSYS2/MINGW64)

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'SQLCipher tag to build (e.g. v4.10.0)'
        required: true
        default: 'v4.10.0'

jobs:
  build-windows:
    name: Build on windows-latest (MSYS2/MINGW64)
    runs-on: windows-latest
    env:
      # evita convers√µes autom√°ticas de caminhos pelo MSYS2
      MSYS2_ARG_CONV_EXCL: '*'

    steps:
      - name: Checkout this repository (workflow)
        uses: actions/checkout@v4

      - name: Setup MSYS2 (MINGW64) and install deps
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          # instala toolchain, openssl, zlib, tcl (tclsh), autotools e utilit√°rios
          install: |
            mingw-w64-x86_64-toolchain
            mingw-w64-x86_64-openssl
            mingw-w64-x86_64-zlib
            mingw-w64-x86_64-tcl
            mingw-w64-x86_64-pkg-config
            autoconf
            automake
            make
            perl
          path-type: minimal

      - name: Show MSYS2 / tool versions (debug)
        shell: msys2 {0}
        run: |
          echo "=== msys info ==="
          uname -a
          gcc --version || true
          pacman -Qi mingw-w64-x86_64-openssl || true
          which tclsh || true

      - name: Build SQLCipher (configure / make / make install)
        id: build
        shell: msys2 {0}
        env:
          TAG: ${{ github.event.inputs.tag }}
        run: |
          set -euo pipefail

          echo "üîπ Building SQLCipher tag: $TAG"
          # prepare clean clone of upstream SQLCipher into ./sqlcipher
          if [ -d sqlcipher ]; then
            echo "sqlcipher dir already exists ‚Äî removing for a clean clone"
            rm -rf sqlcipher
          fi

          git clone https://github.com/sqlcipher/sqlcipher.git sqlcipher
          cd sqlcipher

          # try to checkout the requested tag (works for tags & branches)
          git fetch --tags --quiet || true
          if git rev-parse --verify --quiet "$TAG"; then
            git checkout "$TAG"
          else
            git checkout "tags/$TAG" || git checkout "$TAG" || true
          fi

          echo "=> Current commit:"
          git rev-parse --short HEAD || true
          echo "=> Listing top-level files:"
          ls -la

          # install dir inside repo workspace so Actions can upload it later
          install_dir="$(pwd)/build/install"
          mkdir -p "$install_dir"

          # CFLAGS/LDFLAGS: point to mingw64 includes/libs (msys2 installed packages)
          export CFLAGS="-O2 -DSQLITE_HAS_CODEC -DSQLCIPHER_CRYPTO_OPENSSL -DSQLITE_THREADSAFE=1 -DSQLITE_TEMP_STORE=2 -I/mingw64/include"
          export LDFLAGS="-L/mingw64/lib -lssl -lcrypto -lz"

          echo "CFLAGS: $CFLAGS"
          echo "LDFLAGS: $LDFLAGS"

          echo "üîπ Running configure..."
          # configure to install into $install_dir
          ./configure --prefix="$install_dir" CFLAGS="$CFLAGS" LDFLAGS="$LDFLAGS" --enable-shared --enable-static --disable-tcl \
            || { echo "‚ö†Ô∏è configure failed; dumping config.log (if present)"; [ -f config.log ] && sed -n '1,200p' config.log || true; exit 1; }

          echo "üîπ Running make..."
          make -j"$(nproc)" || { echo "‚ùå make failed"; exit 1; }

          echo "üîπ Running make install (to $install_dir)..."
          make install || { echo "‚ùå make install failed"; exit 1; }

          echo "üîπ Build/install finished. Artifacts:"
          echo " - bin:"
          ls -la "$install_dir/bin" || true
          echo " - lib:"
          ls -la "$install_dir/lib" || true
          echo " - include:"
          ls -la "$install_dir/include" || true

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: sqlcipher-windows-artifacts
          path: |
            sqlcipher/build/install/bin/**
            sqlcipher/build/install/lib/**
            sqlcipher/build/install/include/**

      - name: Print success message
        run: echo "‚úÖ SQLCipher build job finished ‚Äî artifacts uploaded as 'sqlcipher-windows-artifacts'."
