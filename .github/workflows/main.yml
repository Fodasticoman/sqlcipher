name: Build SQLCipher (Windows)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: üîπ Checkout repository
        uses: actions/checkout@v4

      - name: üß∞ Instalar MSYS2
        uses: msys2/setup-msys2@v2
        with:
          update: true
          install: >-
            git
            make
            mingw-w64-x86_64-gcc
            mingw-w64-x86_64-openssl
            mingw-w64-x86_64-zlib

      - name: ‚öôÔ∏è Compilar SQLCipher
        shell: msys2 {0}
        env:
          TAG: v4.10.0
        run: |
          set -euo pipefail
          echo "üîπ Clonando SQLCipher tag: $TAG"

          git clone https://github.com/sqlcipher/sqlcipher.git
          cd sqlcipher
          git checkout "$TAG"

          echo "üîπ Configurando build est√°tico..."
          export CFLAGS=-O2\ -DSQLITE_HAS_CODEC\ -DSQLCIPHER_CRYPTO_OPENSSL\ -DSQLITE_THREADSAFE=1\ -DSQLITE_TEMP_STORE=2\ -I/mingw64/include
          export LDFLAGS=-static\ -L/mingw64/lib\ -lssl\ -lcrypto\ -lz\ -lws2_32\ -lgdi32\ -lcrypt32

          echo "CFLAGS: $CFLAGS"
          echo "LDFLAGS: $LDFLAGS"

          ./configure \
            --enable-shared \
            --disable-tcl \
            CFLAGS="$CFLAGS" \
            LDFLAGS="$LDFLAGS" \
            || { echo '‚ö†Ô∏è configure falhou'; cat config.log | head -n 50 || true; exit 1; }

          echo "üîπ Compilando..."
          make -j"$(nproc)" || { echo '‚ùå make falhou'; exit 1; }

          echo "üîπ Copiando build final..."
          mkdir -p ../build-output
          cp sqlite3 ../build-output/sqlcipher.exe

          echo "‚úÖ Build finalizado! Bin√°rio pronto em: build-output/sqlcipher.exe"

      - name: üì¶ Upload do artefato
        uses: actions/upload-artifact@v4
        with:
          name: sqlcipher-windows
          path: build-output/sqlcipher.exe
