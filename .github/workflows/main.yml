name: Build SQLCipher (Windows MinGW-w64)

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'SQLCipher tag (ex: v4.10.0)'
        required: true
        default: 'v4.10.0'

jobs:
  build-win:
    runs-on: windows-latest

    steps:
      - name: ðŸ”¹ Checkout repositÃ³rio
        uses: actions/checkout@v4

      - name: ðŸ”¹ Instalar MSYS2 e dependÃªncias
        uses: msys2/setup-msys2@v2
        with:
          update: true
          install: >-
            git
            make
            automake
            autoconf
            libtool
            mingw-w64-x86_64-gcc
            mingw-w64-x86_64-openssl
            mingw-w64-x86_64-zlib

      - name: ðŸ”¹ Build SQLCipher (modo autoconf)
        shell: msys2 {0}
        run: |
          echo "ðŸ”¹ Baixando SQLCipher versÃ£o ${{ github.event.inputs.tag }}"
          git clone https://github.com/sqlcipher/sqlcipher.git
          cd sqlcipher
          git checkout ${{ github.event.inputs.tag }}

          echo "ðŸ”¹ Gerando configure..."
          ./configure --disable-tcl \
            CFLAGS="-DSQLITE_HAS_CODEC -DSQLCIPHER_CRYPTO_OPENSSL -DSQLITE_TEMP_STORE=2" \
            LDFLAGS="-lcrypto -lz"

          echo "ðŸ”¹ Compilando..."
          make -j$(nproc)

          echo "ðŸ”¹ Preparando saÃ­da..."
          mkdir -p ../output
          cp .libs/sqlcipher ../output/sqlite3.exe || true
          cp sqlite3.h ../output/
          cp sqlite3ext.h ../output/

      - name: ðŸ”¹ Criar arquivo ZIP com os binÃ¡rios
        run: |
          powershell Compress-Archive -Path output/* -DestinationPath sqlcipher-windows.zip

      - name: ðŸ”¹ Publicar artefato
        uses: actions/upload-artifact@v4
        with:
          name: sqlcipher-windows
          path: sqlcipher-windows.zip
